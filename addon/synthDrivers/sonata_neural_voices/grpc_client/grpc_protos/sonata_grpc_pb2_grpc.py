# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import sonata_grpc_pb2 as sonata__grpc__pb2


class sonata_grpcStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetSonataVersion = channel.unary_unary(
                '/sonata_grpc.sonata_grpc/GetSonataVersion',
                request_serializer=sonata__grpc__pb2.Empty.SerializeToString,
                response_deserializer=sonata__grpc__pb2.Version.FromString,
                )
        self.LoadVoice = channel.unary_unary(
                '/sonata_grpc.sonata_grpc/LoadVoice',
                request_serializer=sonata__grpc__pb2.VoicePath.SerializeToString,
                response_deserializer=sonata__grpc__pb2.VoiceInfo.FromString,
                )
        self.GetVoiceInfo = channel.unary_unary(
                '/sonata_grpc.sonata_grpc/GetVoiceInfo',
                request_serializer=sonata__grpc__pb2.VoiceIdentifier.SerializeToString,
                response_deserializer=sonata__grpc__pb2.VoiceInfo.FromString,
                )
        self.GetSynthesisOptions = channel.unary_unary(
                '/sonata_grpc.sonata_grpc/GetSynthesisOptions',
                request_serializer=sonata__grpc__pb2.VoiceIdentifier.SerializeToString,
                response_deserializer=sonata__grpc__pb2.SynthesisOptions.FromString,
                )
        self.SetSynthesisOptions = channel.unary_unary(
                '/sonata_grpc.sonata_grpc/SetSynthesisOptions',
                request_serializer=sonata__grpc__pb2.VoiceSynthesisOptions.SerializeToString,
                response_deserializer=sonata__grpc__pb2.SynthesisOptions.FromString,
                )
        self.SynthesizeUtterance = channel.unary_stream(
                '/sonata_grpc.sonata_grpc/SynthesizeUtterance',
                request_serializer=sonata__grpc__pb2.Utterance.SerializeToString,
                response_deserializer=sonata__grpc__pb2.SynthesisResult.FromString,
                )
        self.SynthesizeUtteranceRealtime = channel.unary_stream(
                '/sonata_grpc.sonata_grpc/SynthesizeUtteranceRealtime',
                request_serializer=sonata__grpc__pb2.Utterance.SerializeToString,
                response_deserializer=sonata__grpc__pb2.WaveSamples.FromString,
                )


class sonata_grpcServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetSonataVersion(self, request, context):
        """Return sonata version
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadVoice(self, request, context):
        """Load a voice from directory
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVoiceInfo(self, request, context):
        """Get voice information
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSynthesisOptions(self, request, context):
        """Get synthesis options
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSynthesisOptions(self, request, context):
        """Set synthesis options
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SynthesizeUtterance(self, request, context):
        """Synthesize utterance
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SynthesizeUtteranceRealtime(self, request, context):
        """Synthesize utterance in realtime
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_sonata_grpcServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetSonataVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSonataVersion,
                    request_deserializer=sonata__grpc__pb2.Empty.FromString,
                    response_serializer=sonata__grpc__pb2.Version.SerializeToString,
            ),
            'LoadVoice': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadVoice,
                    request_deserializer=sonata__grpc__pb2.VoicePath.FromString,
                    response_serializer=sonata__grpc__pb2.VoiceInfo.SerializeToString,
            ),
            'GetVoiceInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVoiceInfo,
                    request_deserializer=sonata__grpc__pb2.VoiceIdentifier.FromString,
                    response_serializer=sonata__grpc__pb2.VoiceInfo.SerializeToString,
            ),
            'GetSynthesisOptions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSynthesisOptions,
                    request_deserializer=sonata__grpc__pb2.VoiceIdentifier.FromString,
                    response_serializer=sonata__grpc__pb2.SynthesisOptions.SerializeToString,
            ),
            'SetSynthesisOptions': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSynthesisOptions,
                    request_deserializer=sonata__grpc__pb2.VoiceSynthesisOptions.FromString,
                    response_serializer=sonata__grpc__pb2.SynthesisOptions.SerializeToString,
            ),
            'SynthesizeUtterance': grpc.unary_stream_rpc_method_handler(
                    servicer.SynthesizeUtterance,
                    request_deserializer=sonata__grpc__pb2.Utterance.FromString,
                    response_serializer=sonata__grpc__pb2.SynthesisResult.SerializeToString,
            ),
            'SynthesizeUtteranceRealtime': grpc.unary_stream_rpc_method_handler(
                    servicer.SynthesizeUtteranceRealtime,
                    request_deserializer=sonata__grpc__pb2.Utterance.FromString,
                    response_serializer=sonata__grpc__pb2.WaveSamples.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sonata_grpc.sonata_grpc', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class sonata_grpc(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetSonataVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sonata_grpc.sonata_grpc/GetSonataVersion',
            sonata__grpc__pb2.Empty.SerializeToString,
            sonata__grpc__pb2.Version.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoadVoice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sonata_grpc.sonata_grpc/LoadVoice',
            sonata__grpc__pb2.VoicePath.SerializeToString,
            sonata__grpc__pb2.VoiceInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVoiceInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sonata_grpc.sonata_grpc/GetVoiceInfo',
            sonata__grpc__pb2.VoiceIdentifier.SerializeToString,
            sonata__grpc__pb2.VoiceInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSynthesisOptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sonata_grpc.sonata_grpc/GetSynthesisOptions',
            sonata__grpc__pb2.VoiceIdentifier.SerializeToString,
            sonata__grpc__pb2.SynthesisOptions.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSynthesisOptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sonata_grpc.sonata_grpc/SetSynthesisOptions',
            sonata__grpc__pb2.VoiceSynthesisOptions.SerializeToString,
            sonata__grpc__pb2.SynthesisOptions.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SynthesizeUtterance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sonata_grpc.sonata_grpc/SynthesizeUtterance',
            sonata__grpc__pb2.Utterance.SerializeToString,
            sonata__grpc__pb2.SynthesisResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SynthesizeUtteranceRealtime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sonata_grpc.sonata_grpc/SynthesizeUtteranceRealtime',
            sonata__grpc__pb2.Utterance.SerializeToString,
            sonata__grpc__pb2.WaveSamples.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
